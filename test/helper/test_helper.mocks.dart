// Mocks generated by Mockito 5.4.4 from annotations
// in aamar_task/test/helper/test_helper.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;

import 'package:aamar_task/core/network_service/api_result.dart' as _i2;
import 'package:aamar_task/features/posts/data/datasources/client/post_remote_data_source.dart'
    as _i8;
import 'package:aamar_task/features/posts/data/datasources/remote/posts_remote_data_source_implemtnatation.dart'
    as _i6;
import 'package:aamar_task/features/posts/data/models/post_model.dart' as _i7;
import 'package:aamar_task/features/posts/domain/entities/post.dart' as _i5;
import 'package:aamar_task/features/posts/domain/repositories/posts_repository.dart'
    as _i3;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeApiResult_0<T> extends _i1.SmartFake implements _i2.ApiResult<T> {
  _FakeApiResult_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [PostsRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockPostsRepository extends _i1.Mock implements _i3.PostsRepository {
  MockPostsRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<_i2.ApiResult<List<_i5.Post>>> getAllPosts({
    required int? limit,
    required int? page,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #getAllPosts,
          [],
          {
            #limit: limit,
            #page: page,
          },
        ),
        returnValue: _i4.Future<_i2.ApiResult<List<_i5.Post>>>.value(
            _FakeApiResult_0<List<_i5.Post>>(
          this,
          Invocation.method(
            #getAllPosts,
            [],
            {
              #limit: limit,
              #page: page,
            },
          ),
        )),
      ) as _i4.Future<_i2.ApiResult<List<_i5.Post>>>);
}

/// A class which mocks [PostsRemoteDataSourceAbstract].
///
/// See the documentation for Mockito's code generation for more information.
class MockPostsRemoteDataSourceAbstract extends _i1.Mock
    implements _i6.PostsRemoteDataSourceAbstract {
  MockPostsRemoteDataSourceAbstract() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<List<_i7.PostModel>> getAllPosts({
    required int? limit,
    required int? page,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #getAllPosts,
          [],
          {
            #limit: limit,
            #page: page,
          },
        ),
        returnValue: _i4.Future<List<_i7.PostModel>>.value(<_i7.PostModel>[]),
      ) as _i4.Future<List<_i7.PostModel>>);
}

/// A class which mocks [PostsWebService].
///
/// See the documentation for Mockito's code generation for more information.
class MockPostsApiServices extends _i1.Mock implements _i8.PostsWebService {
  MockPostsApiServices() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<List<_i7.PostModel>> getAllPosts(
    int? limit,
    int? page,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #getAllPosts,
          [
            limit,
            page,
          ],
        ),
        returnValue: _i4.Future<List<_i7.PostModel>>.value(<_i7.PostModel>[]),
      ) as _i4.Future<List<_i7.PostModel>>);
}
